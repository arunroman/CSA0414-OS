#include <stdio.h>

struct process {
    int pid;    
    int burst;  
    int waiting; 
    int turnaround; 
};

int main() {
    int n, i, j;
    float avg_waiting = 0, avg_turnaround = 0;
    struct process p[20], temp;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Enter burst time for process %d: ", p[i].pid);
        scanf("%d", &p[i].burst);
    }

    for (i = 0; i < n-1; i++) {
        for (j = i+1; j < n; j++) {
            if (p[i].burst > p[j].burst) {
                temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }

    p[0].waiting = 0;
    for (i = 1; i < n; i++) {
        p[i].waiting = p[i-1].waiting + p[i-1].burst;
        p[i].turnaround = p[i].waiting + p[i].burst;
    }

    for (i = 0; i < n; i++) {
        avg_waiting += p[i].waiting;
        avg_turnaround += p[i].turnaround;
    }
    avg_waiting /= n;
    avg_turnaround /= n;

    printf("PID\tBurst\tWaiting\tTurnaround\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\n", p[i].pid, p[i].burst, p[i].waiting, p[i].turnaround);
    }
    printf("Average waiting time = %.2f\n", avg_waiting);
    printf("Average turnaround time = %.2f\n", avg_turnaround);

    return 0;
}
